{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "672e8409-3152-4d21-bf59-5a61d616a978",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n",
      "C:\\Users\\RJ201319\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\urllib3\\connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'namaste-python-ram.s3.eu-north-1.amazonaws.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "from datetime import datetime\n",
    "import boto3\n",
    "import email_utils\n",
    "from sql_server_connector import get_cursor\n",
    "\n",
    "\n",
    "from pipeline_utils import (\n",
    "    load_product_master,\n",
    "    validate_line,\n",
    "    read_s3_file,\n",
    "    write_s3_file,\n",
    "    copy_s3_file,\n",
    "    delete_s3_file,\n",
    "    credentials\n",
    ")\n",
    "\n",
    "bucket_name = \"namaste-python-ram\"            #Enter your bucket name in AWS S3\n",
    "date_str = datetime.now().strftime(\"%Y%m%d\")\n",
    "base_prefix = f\"incoming_files/{date_str}/\"\n",
    "success_prefix = f\"success_files/{date_str}/\"\n",
    "rejected_prefix = f\"rejected_files/{date_str}/\"\n",
    "product_master_key = \"product_master.csv\"\n",
    "\n",
    "\n",
    "#Retrieving the AWS and Gmail credentials from config.ini file\n",
    "access_key, secret_key, app_key = credentials()\n",
    "\n",
    "\n",
    "s3 = boto3.client(\n",
    "    \"s3\",\n",
    "    aws_access_key_id=access_key,\n",
    "    aws_secret_access_key=secret_key,\n",
    "    verify=False\n",
    ")\n",
    "\n",
    "#Getting all the .csv files from the respective bucket\n",
    "def list_incoming_files():\n",
    "    response = s3.list_objects_v2(Bucket=bucket_name, Prefix=base_prefix)\n",
    "    return [obj[\"Key\"] for obj in response.get(\"Contents\", []) if obj[\"Key\"].endswith(\".csv\")]\n",
    "\n",
    "#Carrying out validation checks on each line item of every file and logging any checks that have failed\n",
    "def process_file(file_key, products):\n",
    "    lines = read_s3_file(bucket_name, file_key)\n",
    "    header = lines[0].strip()\n",
    "    data_lines = lines[1:]\n",
    "\n",
    "    file_valid = True\n",
    "    rejected_lines = []\n",
    "\n",
    "    for line in data_lines:\n",
    "        fields = line.strip().split(\",\")\n",
    "        reasons = validate_line(fields, products, datetime.now())\n",
    "        if reasons:\n",
    "            file_valid = False\n",
    "            rejected_lines.append(f\"{line.strip()},{';'.join(reasons)}\")\n",
    "\n",
    "    return file_valid, header, rejected_lines, data_lines\n",
    "\n",
    "#Main block that calls various functions to review each line item, carry out validation checks, move files between folders, send emails and write successful\n",
    "# files to SQL server database\n",
    "def main():\n",
    "    products = load_product_master(bucket_name, product_master_key)\n",
    "    files = list_incoming_files()\n",
    "    subject = (f\"Subject: validation email {datetime.now().strftime('%Y-%m-%d')}\")\n",
    "    cursor,conn = get_cursor()\n",
    "    insert_query = \"\"\"\n",
    "        INSERT INTO orders \n",
    "        VALUES (%s, %s, %s ,%s, %s, %s)\n",
    "        \"\"\"\n",
    "    total = len(files)\n",
    "    success = 0\n",
    "    fail = 0\n",
    "\n",
    "    if total == 0:\n",
    "        print(f\"No incoming files found for {date_str}.\")\n",
    "        email_utils.send_email_native(\n",
    "        subject = subject,\n",
    "        body = \"No incoming files\",\n",
    "        sender = \"*******@gmail.com\",           #Enter your email address\n",
    "        password = app_key, \n",
    "        recipient = \"*******@gmail.com\"         #Enter recipient email address\n",
    "        )\n",
    "        return\n",
    "\n",
    "    for file_key in files:\n",
    "        file_name = file_key.split('/')[-1]\n",
    "        file_valid, header, rejected_lines ,data_lines = process_file(file_key, products)\n",
    "\n",
    "        if file_valid:\n",
    "            dest_key = success_prefix + file_name\n",
    "            copy_s3_file(bucket_name, file_key, dest_key)\n",
    "            data = [tuple(row.split(',')) for row in data_lines]\n",
    "            cursor.executemany(insert_query, data)\n",
    "            success += 1\n",
    "        else:\n",
    "            dest_key = rejected_prefix + file_name\n",
    "            copy_s3_file(bucket_name, file_key, dest_key)\n",
    "            error_key = rejected_prefix + f\"error_{file_name}\"\n",
    "            write_s3_file(bucket_name, error_key, [header + \",rejection_reason\"] + rejected_lines)\n",
    "            fail += 1\n",
    "\n",
    "        delete_s3_file(bucket_name, file_key)\n",
    "\n",
    "    \n",
    "    conn.commit()\n",
    "    cursor.close()\n",
    "    conn.close()\n",
    "\n",
    "    body = f\"\"\"Total {total} incoming files processed.\n",
    "    {success} files passed validation.\n",
    "    {fail} files failed validation.\"\"\"\n",
    "\n",
    "    email_utils.send_email_native(\n",
    "        subject = subject,\n",
    "        body = body,\n",
    "        sender = \"********@gmail.com\",              #Enter your email address\n",
    "        password = app_key,  \n",
    "        recipient = \"*******@gmail.com\"             #Enter recipient email address\n",
    "    )\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b33e3d82-f209-40dc-aa8b-b5026dad6b25",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
